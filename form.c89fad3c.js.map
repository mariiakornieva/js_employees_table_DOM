{"version":3,"sources":["scripts/form.js"],"names":["locations","formValidation","nameValid","ageValid","allFieldsNonEmpty","tableBody","document","querySelector","newEmployeeForm","createForm","form","createElement","classList","add","addEventListener","submitForm","insertAdjacentHTML","getLocationHTMLOptions","e","notification","preventDefault","employee","Object","fromEntries","FormData","entries","validateInput","name","position","office","age","salary","toLocaleString","createNotification","getErrorMessage","showNotification","type","text","dataset","qa","slice","toUpperCase","insertAdjacentElement","setTimeout","remove","map","city","join","checkNameLength","checkAge","checkAllFieldsNonEmpty","values","every","valid","employeeName","length","value","body"],"mappings":";AAAA,aAEA,IAAMA,EAAY,CAChB,QACA,YACA,SACA,WACA,YACA,iBAGIC,EAAiB,CACrBC,WAAW,EACXC,UAAU,EACVC,mBAAmB,GAGfC,EAAYC,SAASC,cAAc,SACnCC,EAAkBC,IAIxB,SAASA,IACDC,IAAAA,EAAOJ,SAASK,cAAc,QAsD7BD,OApDPA,EAAKE,UAAUC,IAAI,qBACnBH,EAAKI,iBAAiB,SAAUC,GAEhCL,EAAKM,mBAAmB,aA0BhBC,+eAAAA,OAAAA,IA1BR,waAiDOP,EAGT,SAASK,EAAWG,GAGdC,IAAAA,EAFJD,EAAEE,iBAGIC,IAAAA,EAAWC,OAAOC,YAAY,IAAIC,SAAShB,GAAiBiB,WAE9DC,EAAcL,IAChBhB,EAAUW,mBAAmB,YAEnBK,6BAAAA,OAAAA,EAASM,KACTN,uBAAAA,OAAAA,EAASO,SACTP,uBAAAA,OAAAA,EAASQ,OACTR,uBAAAA,OAAAA,EAASS,IACT,uBAAA,OAAA,MAAQT,EAASU,QAAQC,eAAe,SANlD,6BAUAb,EAAec,EACb,UAAW,6CAGbd,EAAec,EAAmB,QAASC,KAG7CC,EAAiBhB,GAGnB,SAASc,EAAmBG,EAAMC,GAC1BlB,IAAAA,EAAeb,SAASK,cAAc,OAcrCQ,OAZPA,EAAaP,UAAUC,IAAI,eAAgBuB,GAC3CjB,EAAamB,QAAQC,GAAK,eAE1BpB,EAAaH,mBAAmB,aAE1BoB,mCAAAA,OAAAA,EAAKI,MAAM,EAAG,GAAGC,cAAgBL,EAAKI,MAAM,GAG5CH,gCAAAA,OAAAA,EALN,mBASOlB,EAGT,SAASgB,EAAiBhB,GACxBX,EAAgBkC,sBAAsB,WAAYvB,GAElDwB,WAAW,WACTxB,EAAayB,UACZ,KAGL,SAAS3B,IACAjB,OAAAA,EAAU6C,IAAI,SAAAC,GACMA,MAAAA,kBAAAA,OAAAA,EAASA,MAAAA,OAAAA,EAAlC,eACCC,KAAK,IAGV,SAASrB,EAAcL,GAKdC,OAJPrB,EAAeC,UAAY8C,EAAgB3B,EAASM,MACpD1B,EAAeE,SAAW8C,EAAS5B,EAASS,KAC5C7B,EAAeG,kBAAoB8C,EAAuB7B,GAEnDC,OAAO6B,OAAOlD,GAAgBmD,MAAM,SAAAC,GAASA,OAAAA,IAGtD,SAASL,EAAgBM,GAGhBA,OAAAA,EAAaC,QAFE,EAKxB,SAASN,EAASnB,GAIT,OAACA,GAHO,KAGWA,GAFX,GAKjB,SAASoB,EAAuB7B,GACvBC,OAAAA,OAAO6B,OAAO9B,GAAU+B,MAAM,SAAAI,GAASA,OAAAA,EAAMD,OAAS,IAG/D,SAASrB,IACC,QAAA,GACDjC,KAAAA,EAAeC,UACX,MAAA,4CACJD,KAAAA,EAAeE,SACX,MAAA,iDACJF,KAAAA,EAAeG,kBACX,MAAA,iDAGJ,MAAA,QA1JTE,SAASmD,KAAKf,sBAAsB,YAAalC","file":"form.c89fad3c.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst locations = [\n  'Tokyo',\n  'Singapore',\n  'London',\n  'New York',\n  'Edinburgh',\n  'San Francisco',\n];\n\nconst formValidation = {\n  nameValid: false,\n  ageValid: false,\n  allFieldsNonEmpty: false,\n};\n\nconst tableBody = document.querySelector('tbody');\nconst newEmployeeForm = createForm();\n\ndocument.body.insertAdjacentElement('beforeend', newEmployeeForm);\n\nfunction createForm() {\n  const form = document.createElement('form');\n\n  form.classList.add('new-employee-form');\n  form.addEventListener('submit', submitForm);\n\n  form.insertAdjacentHTML('afterbegin', `\n    <label>Name:\n      <input\n        type=\"text\"\n        name=\"name\"\n        data-qa=\"name\"\n        placeholder=\"Name\"\n        required\n      >\n    </label>\n    <label>Position:\n      <input\n        type=\"text\"\n        name=\"position\"\n        data-qa=\"position\"\n        placeholder=\"Position\"\n        required\n      >\n    </label>\n    <label>Office:\n      <select\n        type=\"text\"\n        name=\"office\"\n        data-qa=\"office\"\n        required\n      >\n        ${getLocationHTMLOptions()}\n      </select>\n    </label>\n    <label>Age:\n      <input\n        type=\"number\"\n        name=\"age\"\n        data-qa=\"age\"\n        placeholder=\"Age\"\n        required\n      >\n    </label>\n    <label>Salary:\n      <input\n        type=\"number\"\n        name=\"salary\"\n        data-qa=\"salary\"\n        placeholder=\"Salary\"\n        required>\n    </label>\n    <button type=\"submit\">Save to table</button>\n  `);\n\n  return form;\n}\n\nfunction submitForm(e) {\n  e.preventDefault();\n\n  let notification;\n  const employee = Object.fromEntries(new FormData(newEmployeeForm).entries());\n\n  if (validateInput(employee)) {\n    tableBody.insertAdjacentHTML('beforeend', `\n      <tr>\n        <td>${employee.name}</td>\n        <td>${employee.position}</td>\n        <td>${employee.office}</td>\n        <td>${employee.age}</td>\n        <td>${'$' + (+employee.salary).toLocaleString('en-us')}</td>\n      </tr>\n    `);\n\n    notification = createNotification(\n      'success', 'New employee has been added to the table'\n    );\n  } else {\n    notification = createNotification('error', getErrorMessage());\n  }\n\n  showNotification(notification);\n}\n\nfunction createNotification(type, text) {\n  const notification = document.createElement('div');\n\n  notification.classList.add('notification', type);\n  notification.dataset.qa = 'notification';\n\n  notification.insertAdjacentHTML('afterbegin', `\n    <h2 class=\"title\">\n      ${type.slice(0, 1).toUpperCase() + type.slice(1)}\n    </h2>\n    <p>\n      ${text}\n    </p>\n  `);\n\n  return notification;\n}\n\nfunction showNotification(notification) {\n  newEmployeeForm.insertAdjacentElement('afterend', notification);\n\n  setTimeout(() => {\n    notification.remove();\n  }, 3000);\n}\n\nfunction getLocationHTMLOptions() {\n  return locations.map(city => {\n    return `<option value=\"${city}\">${city}</option>`;\n  }).join('');\n}\n\nfunction validateInput(employee) {\n  formValidation.nameValid = checkNameLength(employee.name);\n  formValidation.ageValid = checkAge(employee.age);\n  formValidation.allFieldsNonEmpty = checkAllFieldsNonEmpty(employee);\n\n  return Object.values(formValidation).every(valid => valid);\n}\n\nfunction checkNameLength(employeeName) {\n  const minNameLength = 4;\n\n  return employeeName.length >= minNameLength;\n}\n\nfunction checkAge(age) {\n  const minAge = 18;\n  const maxAge = 90;\n\n  return +age >= minAge && +age <= maxAge;\n}\n\nfunction checkAllFieldsNonEmpty(employee) {\n  return Object.values(employee).every(value => value.length > 0);\n}\n\nfunction getErrorMessage() {\n  switch (false) {\n    case formValidation.nameValid:\n      return 'Name should be at least 4 characters long';\n    case formValidation.ageValid:\n      return 'Age should be in the range from 18 to 90 years';\n    case formValidation.allFieldsNonEmpty:\n      return 'All fields are required and shouldn\\'t be empty';\n  }\n\n  return 'Error';\n}\n"]}